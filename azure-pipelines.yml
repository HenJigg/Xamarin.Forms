variables:
- name: DefaultBuildConfiguration
  value: Debug
- name: DefaultBuildPlatform
  value: 'any cpu'
- name: ApkName
  value: AndroidControlGallery.AndroidControlGallery.apk
- name: IpaName
  value: XamarinFormsControlGalleryiOS.ipa
- name: SolutionFile
  value: Xamarin.Forms.sln
- name: BuildVersion
  value: $[counter(variables['Build.SourceBranch'], 1)]
- name: BuildVersion42
  value: $[counter('xf-nuget-counter', 992000)]
- name: BuildVersion43
  value: $[counter('xf-nuget-counter', 992000)]
- name: BuildVersion44
  value: $[counter('xf-nuget-counter', 992000)]
- name: NUGET_VERSION
  value: 5.4.0
- name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
  value: true
- name: DOTNET_VERSION
  value: 3.1.100
- name: UseNugets
  value: true

resources:
  repositories:
    - repository: xamarin-templates 
      type: github
      name: xamarin/yaml-templates
      endpoint: xamarin

trigger:
  branches:
    include:
    - master
    - 3.*
    - 4.*
  tags:
    include:
    - '*'
  paths:
    exclude:
    - README.md

pr:
  autoCancel: false
  branches:
    include:
    - master
    - 4.*
    - 3.*

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master

stages:
  - stage: windows
    displayName: Build Windows
    jobs:
    - template: build/steps/build-windows.yml
      parameters:
        name: win
        displayName: Build Windows Phase
        vmImage: $(win2019VmImage)
        targetFolder: Xamarin.Forms.ControlGallery.Android/legacyRenderers/
        msbuildExtraArguments: '/nowarn:VSX1000'
        buildConfiguration: $(DefaultBuildConfiguration)
        buildPlatform: $(DefaultBuildPlatform)
        provisionatorPath : 'build/provisioning/provisioning.csx'
        includeUwp: 'false'
    - template: build/steps/build-windows.yml
      parameters:
        name: win_2019
        displayName: Build UWP Phase
        vmImage: $(win2019VmImage)
        targetFolder: Xamarin.Forms.ControlGallery.Android/legacyRenderers/
        msbuildExtraArguments: '/nowarn:VSX1000 /p:CreateAllAndroidTargets=true'
        buildConfiguration: $(DefaultBuildConfiguration)
        buildPlatform: $(DefaultBuildPlatform)
        provisionatorPath : 'build/provisioning/provisioning.csx'
        slnPath: '.Xamarin.Forms.UAP.nuget.sln'
        includeNonUwp: 'false'
    - job: nuget_pack
      dependsOn:
        - win
        - win_2019
      displayName: Nuget Phase
      condition: succeeded()
      pool:
        name: $(win2019VmImage)
      variables:
        FormsIdAppend: ''
        buildConfiguration: $(DefaultBuildConfiguration)
        nugetPackageVersion : $[ dependencies.win.outputs['debug.winbuild.xamarinformspackageversion'] ]
      steps:
        - template: build/steps/build-nuget.yml

  - stage: android
    displayName: Build Android
    ${{ if eq(variables['UseNugets'], 'true') }}:
      dependsOn: windows
    ${{ if eq(variables['UseNugets'], 'false') }}:
      dependsOn: []
    jobs:   
      - template: build/steps/build-android.yml
        parameters:
          name: android_legacy
          displayName: Build Android [Legacy Renderers]
          vmImage: $(macOSVmImage)
          targetFolder: Xamarin.Forms.ControlGallery.Android/legacyRenderers/
          androidProjectArguments: '/t:"Rebuild;SignAndroidPackage" /bl:$(Build.ArtifactStagingDirectory)/android-legacy.binlog'
          buildConfiguration: $(DefaultBuildConfiguration)
          provisionatorPath : 'build/provisioning/provisioning.csx'

      - template: build/steps/build-android.yml
        parameters:
          name: android_preappcompact
          displayName: Build Android [Pre-AppCompat]
          vmImage: $(macOSVmImage)
          targetFolder: Xamarin.Forms.ControlGallery.Android/preAppCompat
          androidProjectArguments: '/t:"Rebuild;SignAndroidPackage" /p:DefineConstants="TRACE DEBUG FORMS_APPLICATION_ACTIVITY APP" /bl:$(Build.ArtifactStagingDirectory)/android-preappcompact.binlog'
          buildConfiguration: $(DefaultBuildConfiguration)
          provisionatorPath : 'build/provisioning/provisioning.csx'

      - template: build/steps/build-android.yml
        parameters:
          name: android_fast
          displayName: Build Android [Fast Renderers]
          vmImage: $(macOSVmImage)
          targetFolder: Xamarin.Forms.ControlGallery.Android/newRenderers/
          androidProjectArguments: '/t:"Rebuild;SignAndroidPackage" /p:DefineConstants="TRACE DEBUG TEST_EXPERIMENTAL_RENDERERS APP" /bl:$(Build.ArtifactStagingDirectory)/android-newrenderers.binlog'
          buildConfiguration: $(DefaultBuildConfiguration)
          provisionatorPath : 'build/provisioning/provisioning.csx'

  - stage: build_osx
    displayName: Build OSX
    ${{ if eq(variables['UseNugets'], 'true') }}:
      dependsOn: windows
    ${{ if eq(variables['UseNugets'], 'false') }}:
      dependsOn: []
    jobs:
      - job: osx
        displayName: OSX Phase
        pool:
          name: $(macOSVmImage)
          demands:
            - Agent.OS -equals darwin
            - sh
            - msbuild
            - Xamarin.iOS
        variables:
          provisionator.osxPath : 'build/provisioning/provisioning.csx'
          provisionator.signPath : 'build/provisioning/provisioning_sign.csx'
          buildConfiguration: $(DefaultBuildConfiguration)
          slnPath: $(SolutionFile)
          iOSCertSecureFileName: 'Xamarin Forms iOS Certificate.p12'
          iOSProvisioningSecureFileName: 'Xamarin Forms iOS Provisioning.mobileprovision'
          monoVersion : $(MONO_VERSION)
        steps:
          - template: build/steps/build-osx.yml

  # only sign using the private server
  - ${{ if eq(variables['System.TeamProject'], 'devdiv') }}:
    - stage: nuget_signing
      dependsOn: windows
      displayName: Sign Nuget
      jobs:
        - job: nuget_sign
          displayName: Sign Phase
          pool:
            name: $(signVmImage)
          steps:
            - template: build/steps/build-sign.yml
          condition: and(succeeded(), or(eq(variables['Sign'], 'true'), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'],'refs/tags/'))))


